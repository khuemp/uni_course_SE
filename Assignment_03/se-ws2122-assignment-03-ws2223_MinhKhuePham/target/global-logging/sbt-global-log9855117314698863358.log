[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\MSIGF7~1\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\MSIGF7~1\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Eclipse Foundation Java 16.0.2)
[debug]       Load.loadUnit: plugins took 258.883399ms
[debug]       Load.loadUnit: defsScala took 2.0099ms
[debug] [Loading] Scanning directory C:\Users\MSI GF75\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\MSI GF75\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.294401 ms
[debug]           Load.resolveProject(global-plugins) took 81.5438ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\MSI GF75\.sbt\1.0\plugins, plugins: List(<none>))) took 141.4145ms
[debug] [Loading] Done in C:\Users\MSI GF75\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 188.4869ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.514ms
[debug]     Load.loadUnit(file:/C:/Users/MSI%20GF75/.sbt/1.0/plugins/, ...) took 474.9102ms
[debug]   Load.apply: load took 820.746399ms
[debug]   Load.apply: resolveProjects took 17.128301ms
[debug]   Load.apply: finalTransforms took 133.6615ms
[debug]   Load.apply: config.delegates took 22.083399ms
[debug]   Load.apply: Def.make(settings)... took 844.1768ms
[debug]   Load.apply: structureIndex took 253.811ms
[debug]   Load.apply: mkStreams took 9.045899ms
[info] loading global plugins from C:\Users\MSI GF75\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3840.4482ms
[debug]           Load.loadUnit: plugins took 36.246001ms
[debug]           Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\MSI GF75\OneDrive\Document\Lectures\SE\Assignment_03\se-ws2122-assignment-03-ws2223_student_version\project
[debug]             Load.loadUnit: mkEval took 5.6212ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\MSI GF75\OneDrive\Document\Lectures\SE\Assignment_03\se-ws2122-assignment-03-ws2223_student_version\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.1419 ms
[info] loading settings for project se-ws2122-assignment-03-ws2223_student_version-build from plugins.sbt,idea2.sbt ...
[debug]               Load.resolveProject(se-ws2122-assignment-03-ws2223_student_version-build) took 4.7489ms
[debug]             Load.loadTransitive: finalizeProject(Project(id se-ws2122-assignment-03-ws2223_student_version-build, base: C:\Users\MSI GF75\OneDrive\Document\Lectures\SE\Assignment_03\se-ws2122-assignment-03-ws2223_student_version\project, plugins: List(<none>))) took 10.084901ms
[debug] [Loading] Done in C:\Users\MSI GF75\OneDrive\Document\Lectures\SE\Assignment_03\se-ws2122-assignment-03-ws2223_student_version\project, returning: (se-ws2122-assignment-03-ws2223_student_version-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 292.159001ms
[debug]           Load.loadUnit: cleanEvalClasses took 15.6004ms
[debug]         Load.loadUnit(file:/C:/Users/MSI%20GF75/OneDrive/Document/Lectures/SE/Assignment_03/se-ws2122-assignment-03-ws2223_student_version/project/, ...) took 345.5123ms
[debug]       Load.apply: load took 347.5966ms
[debug]       Load.apply: resolveProjects took 0.2689ms
[debug]       Load.apply: finalTransforms took 14.347901ms
[debug]       Load.apply: config.delegates took 0.8271ms
[debug]       Load.apply: Def.make(settings)... took 99.2772ms
[debug]       Load.apply: structureIndex took 39.5145ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\MSI GF75\OneDrive\Document\Lectures\SE\Assignment_03\se-ws2122-assignment-03-ws2223_student_version\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 848.447799ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\MSI GF75\OneDrive\Document\Lectures\SE\Assignment_03\se-ws2122-assignment-03-ws2223_student_version
[debug]       Load.loadUnit: mkEval took 0.372599ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.880499 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 43.381999ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\MSI GF75\OneDrive\Document\Lectures\SE\Assignment_03\se-ws2122-assignment-03-ws2223_student_version, dependencies: List(ClasspathDependency(RootProject(https://github.com/regb/cafesat.git#49e7c8954235001787ad14c8db3c60c36ec45cce),None)), plugins: List(<none>))) took 50.784299ms
[debug] [Loading] Done in C:\Users\MSI GF75\OneDrive\Document\Lectures\SE\Assignment_03\se-ws2122-assignment-03-ws2223_student_version, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 164.9209ms
[debug]     Load.loadUnit: cleanEvalClasses took 33.1214ms
[debug]   Load.loadUnit(file:/C:/Users/MSI%20GF75/OneDrive/Document/Lectures/SE/Assignment_03/se-ws2122-assignment-03-ws2223_student_version/, ...) took 1047.863001ms
[debug]           Load.loadUnit: plugins took 39.865399ms
[debug]           Load.loadUnit: defsScala took 0.0044ms
[debug] [Loading] Scanning directory C:\Users\MSI GF75\.sbt\1.0\staging\ca0d540220502776ebdc\cafesat\project
[debug]             Load.loadUnit: mkEval took 0.4335ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\MSI GF75\.sbt\1.0\staging\ca0d540220502776ebdc\cafesat\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.009001 ms
[info] loading settings for project cafesat-build from idea2.sbt ...
[debug]               Load.resolveProject(cafesat-build) took 1.960001ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cafesat-build, base: C:\Users\MSI GF75\.sbt\1.0\staging\ca0d540220502776ebdc\cafesat\project, plugins: List(<none>))) took 4.518401ms
[debug] [Loading] Done in C:\Users\MSI GF75\.sbt\1.0\staging\ca0d540220502776ebdc\cafesat\project, returning: (cafesat-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 32.558299ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.042101ms
[debug]         Load.loadUnit(file:/C:/Users/MSI%20GF75/.sbt/1.0/staging/ca0d540220502776ebdc/cafesat/project/, ...) took 77.829201ms
[debug]       Load.apply: load took 80.562099ms
[debug]       Load.apply: resolveProjects took 0.375999ms
[debug]       Load.apply: finalTransforms took 18.3205ms
[debug]       Load.apply: config.delegates took 0.511101ms
[debug]       Load.apply: Def.make(settings)... took 97.2007ms
[debug]       Load.apply: structureIndex took 41.8731ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\MSI GF75\.sbt\1.0\staging\ca0d540220502776ebdc\cafesat\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 394.535899ms
[debug]     Load.loadUnit: defsScala took 0.0198ms
[debug] [Loading] Scanning directory C:\Users\MSI GF75\.sbt\1.0\staging\ca0d540220502776ebdc\cafesat
[debug]       Load.loadUnit: mkEval took 0.263799ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6926 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.7437ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\MSI GF75\.sbt\1.0\staging\ca0d540220502776ebdc\cafesat, configurations: List(it), plugins: List(<none>))) took 3.9319ms
[debug] [Loading] Done in C:\Users\MSI GF75\.sbt\1.0\staging\ca0d540220502776ebdc\cafesat, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 65.3269ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.661299ms
[debug]   Load.loadUnit(https://github.com/regb/cafesat.git#49e7c8954235001787ad14c8db3c60c36ec45cce, ...) took 467.9229ms
[debug] Load.apply: load took 1522.236ms
[debug] Load.apply: resolveProjects took 0.3945ms
[debug] Load.apply: finalTransforms took 49.174899ms
[debug] Load.apply: config.delegates took 1.6951ms
[debug] Load.apply: Def.make(settings)... took 148.6034ms
[debug] Load.apply: structureIndex took 52.7304ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to se-ws2223-assignment-03 (in build file:/C:/Users/MSI%20GF75/OneDrive/Document/Lectures/SE/Assignment_03/se-ws2122-assignment-03-ws2223_student_version/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / idePackagePrefix
[warn]   +- C:\Users\MSI GF75\OneDrive\Document\Lectures\SE\Assignment_03\se-ws2122-assignment-03-ws2223_student_version\build.sbt:8
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56233 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56233, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, ProjectRef(uri("https://github.com/regb/cafesat.git#49e7c8954235001787ad14c8db3c60c36ec45cce"), "root") / Compile / compile and 1 others.
[info] 	Run `last` for details.
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	ProjectRef(uri("https://github.com/regb/cafesat.git#49e7c8954235001787ad14c8db3c60c36ec45cce"), "root") / Compile / compile
[debug] 	ProjectRef(uri("https://github.com/regb/cafesat.git#49e7c8954235001787ad14c8db3c60c36ec45cce"), "root") / Test / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to se-ws2223-assignment-03 (in build file:/C:/Users/MSI%20GF75/OneDrive/Document/Lectures/SE/Assignment_03/se-ws2122-assignment-03-ws2223_student_version/)
[debug] > Exec(idea-shell, None, None)
